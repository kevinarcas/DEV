body{
    background-color: antiquewhite;
    font-family: Arial, Helvetica, sans-serif;
    text-align: center; /* Centra texto horizontalmente */
}

.grid-layout{
    width: 90%;
    height: 700px;
    margin: 0 auto;
    background-color: lightgreen;
    border: 1px solid black;

    display: grid;
    /* Cada valor es una columna.
        auto -> ocupan todas lo mismo
        porcentaje, píxeles */
    /* grid-template-columns: 50% 25% auto auto; */
    /* grid-template-columns: 75% auto; */
    /* Modifico el comportamiento de las filas */
    /* grid-template-rows: 50px 200px auto; */
    /* grid-template-rows: 20% 10% 60% auto; */
    /* Alinear el contenido como queramos. Ej: flex-start
    Las filas y oclumnas con auto, se ajustan al contenido. */
    /* justify-content: stretch; */
}

.caja{
    border: 4px solid black;
    background-color: lightgray;
    padding: 20px;
}

.c1{
    /* En el inspector, le doy a layout y marco el check 'grid-overlays'
    para ver las líneas del grid.
    Si le pongo 1/4, va a ocupar desde la línea 1 a la 4. */
    /* grid-column: 1/4; */
    /* Lo mismo pero a nivel de columna. NO PUEDE HABER grid-column. */
    /* grid-row: 1 / span 2; */
    background-color: lightblue;
    /* Combina grid-column y grid-row 
    fila donde empieza, columna donde empieza, filas, columnas */
    /* grid-area: 1 / 1 / span 4 / span 2; */
    /* grid-area: 1/1/span 1/span 2; */
    /* grid-column: 1/span 2; */
}

.c2{
    /* grid-column: 1/span 1;
    grid-row: 1/span 2; */
    background-color: lightyellow;
    /* grid-area: 2/1/span 1/span 2; */
    /* grid-column: 1/span 2; */
}

.c3{
    background-color: lightsalmon;
}

.c4{
    /* Le puedo poner 1 / span 3, con esto ocupa 3 y empieza por el 1.
    Sería equivalente a poner 1 / 4 */
    /* grid-column: 1 / span 3; */
    background-color: lightcoral;    
}

.c5{
    background-color: lightgray;
    /* grid-area: 4/1/span 1/span 2; */
    /* grid-column: 1/span 2; */
}


/***************************
** FORMA 1 DE HACER GRID. **
***************************/
/* .grid-layout{
    grid-template-columns: 75% auto;
    grid-template-rows: 20% 10% 60% auto;
}

.c1{ grid-column: 1/span 2; }
.c2{ grid-column: 1/span 2; }
.c5{ grid-column: 1/span 2; } */


/***************************
** FORMA 2 DE HACER GRID. **
***************************/
.grid-layout{
    grid-template-areas:    'cabecera cabecera'
                            'nav nav'
                            'contenido lateral'
                            'pie pie';
    grid-template-rows: 20% 10% auto 10%;
    grid-template-columns: 75% auto;
}

.c1{ grid-area: cabecera;}
.c2{ grid-area: nav; }
.c3{ grid-area: contenido; }
.c4{ grid-area: lateral; }
.c5{ grid-area: pie; }